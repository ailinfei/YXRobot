<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yxrobot.mapper.ProductMapper">

    <!-- 结果映射 -->
    <resultMap id="ProductResultMap" type="com.yxrobot.entity.Product">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="model" property="model" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="CLOB"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="cover_image_url" property="coverImageUrl" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="TINYINT"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, name, model, description, price, cover_image_url, status, created_at, updated_at, is_deleted
    </sql>

    <!-- 根据ID查询产品 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="ProductResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE id = #{id} AND is_deleted = 0
    </select>

    <!-- 根据产品型号查询产品 -->
    <select id="selectByModel" parameterType="java.lang.String" resultMap="ProductResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE model = #{model} AND is_deleted = 0
    </select>

    <!-- 查询所有产品 -->
    <select id="selectAll" resultMap="ProductResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE is_deleted = 0
        ORDER BY created_at DESC
    </select>

    <!-- 根据状态查询产品 -->
    <select id="selectByStatus" parameterType="java.lang.String" resultMap="ProductResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE status = #{status} AND is_deleted = 0
        ORDER BY name ASC
    </select>

    <!-- 分页查询产品 -->
    <select id="selectWithPagination" resultMap="ProductResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE is_deleted = 0
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        ORDER BY created_at DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 根据条件搜索产品 -->
    <select id="searchProducts" resultMap="ProductResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="model != null and model != ''">
                AND model LIKE CONCAT('%', #{model}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="minPrice != null">
                AND price >= #{minPrice}
            </if>
            <if test="maxPrice != null">
                AND price &lt;= #{maxPrice}
            </if>
            AND is_deleted = 0
        </where>
        ORDER BY name ASC
    </select>

    <!-- 统计产品总数 -->
    <select id="countAll" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM products
        WHERE is_deleted = 0
    </select>

    <!-- 根据状态统计产品数量 -->
    <select id="countByStatus" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM products
        WHERE status = #{status} AND is_deleted = 0
    </select>

    <!-- 统计搜索结果数量 -->
    <select id="countSearchResults" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM products
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="model != null and model != ''">
                AND model LIKE CONCAT('%', #{model}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="minPrice != null">
                AND price >= #{minPrice}
            </if>
            <if test="maxPrice != null">
                AND price &lt;= #{maxPrice}
            </if>
            AND is_deleted = 0
        </where>
    </select>

    <!-- 插入新产品 -->
    <insert id="insert" parameterType="com.yxrobot.entity.Product" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO products (
            name, model, description, price, cover_image_url, status, created_at, updated_at, is_deleted
        ) VALUES (
            #{name}, #{model}, #{description}, #{price}, #{coverImageUrl}, #{status}, NOW(), NOW(), #{isDeleted}
        )
    </insert>

    <!-- 更新产品信息 -->
    <update id="update" parameterType="com.yxrobot.entity.Product">
        UPDATE products
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="model != null and model != ''">
                model = #{model},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="coverImageUrl != null">
                cover_image_url = #{coverImageUrl},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            updated_at = NOW()
        </set>
        WHERE id = #{id} AND is_deleted = 0
    </update>

    <!-- 更新产品状态 -->
    <update id="updateStatus">
        UPDATE products
        SET status = #{status}, updated_at = NOW()
        WHERE id = #{id} AND is_deleted = 0
    </update>

    <!-- 更新产品价格 -->
    <update id="updatePrice">
        UPDATE products
        SET price = #{price}, updated_at = NOW()
        WHERE id = #{id} AND is_deleted = 0
    </update>

    <!-- 软删除产品 -->
    <update id="deleteById" parameterType="java.lang.Long">
        UPDATE products
        SET is_deleted = 1, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 批量软删除产品 -->
    <update id="deleteBatch">
        UPDATE products
        SET is_deleted = 1, updated_at = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 恢复已删除的产品 -->
    <update id="restoreById" parameterType="java.lang.Long">
        UPDATE products
        SET is_deleted = 0, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 检查产品型号是否存在 -->
    <select id="existsByModel" parameterType="java.lang.String" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM products
        WHERE model = #{model} AND is_deleted = 0
    </select>

    <!-- 检查产品型号是否存在（排除指定ID） -->
    <select id="existsByModelExcludeId" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM products
        WHERE model = #{model} AND id != #{id} AND is_deleted = 0
    </select>

    <!-- 添加测试代码期望的方法实现 -->
    
    <!-- 根据查询条件查询产品 -->
    <select id="selectByQuery" parameterType="com.yxrobot.dto.ProductQueryDTO" resultMap="ProductResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="model != null and model != ''">
                AND model LIKE CONCAT('%', #{model}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="minPrice != null">
                AND price >= #{minPrice}
            </if>
            <if test="maxPrice != null">
                AND price &lt;= #{maxPrice}
            </if>
            AND is_deleted = 0
        </where>
        ORDER BY created_at DESC
    </select>
    
    <!-- 根据查询条件统计产品数量 -->
    <select id="countByQuery" parameterType="com.yxrobot.dto.ProductQueryDTO" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM products
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="model != null and model != ''">
                AND model LIKE CONCAT('%', #{model}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="minPrice != null">
                AND price >= #{minPrice}
            </if>
            <if test="maxPrice != null">
                AND price &lt;= #{maxPrice}
            </if>
            AND is_deleted = 0
        </where>
    </select>
    
    <!-- 根据ID更新产品 -->
    <update id="updateById" parameterType="com.yxrobot.entity.Product">
        UPDATE products
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="model != null and model != ''">
                model = #{model},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="coverImageUrl != null">
                cover_image_url = #{coverImageUrl},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            updated_at = NOW()
        </set>
        WHERE id = #{id} AND is_deleted = 0
    </update>
    
    <!-- 批量删除产品 -->
    <update id="batchDeleteByIds">
        UPDATE products
        SET is_deleted = 1, updated_at = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    
    <!-- 获取状态统计 -->
    <select id="getStatusStatistics" resultType="java.util.HashMap">
        SELECT 
            'published' as status, COUNT(*) as count
        FROM products 
        WHERE status = 'published' AND is_deleted = 0
        UNION ALL
        SELECT 
            'draft' as status, COUNT(*) as count
        FROM products 
        WHERE status = 'draft' AND is_deleted = 0
        UNION ALL
        SELECT 
            'total' as status, COUNT(*) as count
        FROM products 
        WHERE is_deleted = 0
    </select>

</mapper>