<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yxrobot.mapper.RentalCustomerMapper">

    <!-- 租赁客户结果映射 -->
    <resultMap id="RentalCustomerResultMap" type="com.yxrobot.entity.RentalCustomer">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="customer_name" property="customerName" jdbcType="VARCHAR"/>
        <result column="customer_type" property="customerType" jdbcType="VARCHAR"/>
        <result column="contact_person" property="contactPerson" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="region" property="region" jdbcType="VARCHAR"/>
        <result column="industry" property="industry" jdbcType="VARCHAR"/>
        <result column="credit_level" property="creditLevel" jdbcType="VARCHAR"/>
        <result column="total_rental_amount" property="totalRentalAmount" jdbcType="DECIMAL"/>
        <result column="total_rental_days" property="totalRentalDays" jdbcType="INTEGER"/>
        <result column="last_rental_date" property="lastRentalDate" jdbcType="DATE"/>
        <result column="is_active" property="isActive" jdbcType="TINYINT"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="TINYINT"/>
    </resultMap>

    <!-- 基础查询字段 -->
    <sql id="Base_Column_List">
        id, customer_name, customer_type, contact_person, phone, email, address,
        region, industry, credit_level, total_rental_amount, total_rental_days,
        last_rental_date, is_active, created_at, updated_at, is_deleted
    </sql>

    <!-- 查询条件 -->
    <sql id="Where_Clause">
        <where>
            is_deleted = 0
            <if test="params.keyword != null and params.keyword != ''">
                AND (customer_name LIKE CONCAT('%', #{params.keyword}, '%')
                OR contact_person LIKE CONCAT('%', #{params.keyword}, '%')
                OR phone LIKE CONCAT('%', #{params.keyword}, '%'))
            </if>
            <if test="params.customerType != null and params.customerType != ''">
                AND customer_type = #{params.customerType}
            </if>
            <if test="params.region != null and params.region != ''">
                AND region = #{params.region}
            </if>
            <if test="params.creditLevel != null and params.creditLevel != ''">
                AND credit_level = #{params.creditLevel}
            </if>
            <if test="params.isActive != null">
                AND is_active = #{params.isActive}
            </if>
        </where>
    </sql>

    <!-- 根据ID查询 -->
    <select id="selectById" resultMap="RentalCustomerResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM rental_customers
        WHERE id = #{id} AND is_deleted = 0
    </select>

    <!-- 根据客户名称查询 -->
    <select id="selectByName" resultMap="RentalCustomerResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM rental_customers
        WHERE customer_name = #{customerName} AND is_deleted = 0
    </select>

    <!-- 分页查询列表 -->
    <select id="selectList" resultMap="RentalCustomerResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM rental_customers
        <include refid="Where_Clause"/>
        ORDER BY total_rental_amount DESC, created_at DESC
        <if test="params.page != null and params.pageSize != null">
            LIMIT #{params.pageSize} OFFSET #{params.offset}
        </if>
    </select>

    <!-- 查询总数 -->
    <select id="selectCount" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM rental_customers
        <include refid="Where_Clause"/>
    </select>

    <!-- 插入客户 -->
    <insert id="insert" parameterType="com.yxrobot.entity.RentalCustomer" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO rental_customers (
            customer_name, customer_type, contact_person, phone, email, address,
            region, industry, credit_level, total_rental_amount, total_rental_days,
            last_rental_date, is_active, created_at, updated_at, is_deleted
        ) VALUES (
            #{customerName}, #{customerType}, #{contactPerson}, #{phone}, #{email}, #{address},
            #{region}, #{industry}, #{creditLevel}, #{totalRentalAmount}, #{totalRentalDays},
            #{lastRentalDate}, #{isActive}, NOW(), NOW(), 0
        )
    </insert>

    <!-- 更新客户 -->
    <update id="updateById" parameterType="com.yxrobot.entity.RentalCustomer">
        UPDATE rental_customers
        SET customer_name = #{customerName},
            customer_type = #{customerType},
            contact_person = #{contactPerson},
            phone = #{phone},
            email = #{email},
            address = #{address},
            region = #{region},
            industry = #{industry},
            credit_level = #{creditLevel},
            total_rental_amount = #{totalRentalAmount},
            total_rental_days = #{totalRentalDays},
            last_rental_date = #{lastRentalDate},
            is_active = #{isActive},
            updated_at = NOW()
        WHERE id = #{id} AND is_deleted = 0
    </update>

    <!-- 软删射?-->
    <update id="deleteById">
        UPDATE rental_customers
        SET is_deleted = 1, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 批量软删射?-->
    <update id="deleteBatchByIds">
        UPDATE rental_customers
        SET is_deleted = 1, updated_at = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 查询客户类型分布 -->
    <select id="selectCustomerTypeDistribution" resultType="java.util.Map">
        SELECT 
            customer_type as name,
            COUNT(*) as value,
            COALESCE(SUM(total_rental_amount), 0) as totalAmount
        FROM rental_customers
        WHERE is_deleted = 0 AND is_active = 1
        GROUP BY customer_type
        ORDER BY value DESC
    </select>

    <!-- 查询客户地区分布 -->
    <select id="selectCustomerRegionDistribution" resultType="java.util.Map">
        SELECT 
            region as name,
            COUNT(*) as value,
            COALESCE(SUM(total_rental_amount), 0) as totalAmount
        FROM rental_customers
        WHERE is_deleted = 0 AND is_active = 1 AND region IS NOT NULL
        GROUP BY region
        ORDER BY totalAmount DESC
    </select>

    <!-- 更新客户租赁统计 -->
    <update id="updateRentalStats">
        UPDATE rental_customers
        SET total_rental_amount = #{totalRentalAmount},
            total_rental_days = #{totalRentalDays},
            last_rental_date = CURDATE(),
            updated_at = NOW()
        WHERE id = #{customerId} AND is_deleted = 0
    </update>

    <!-- 查询活跃客户射?-->
    <select id="selectActiveCustomerCount" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM rental_customers
        WHERE is_deleted = 0 AND is_active = 1
    </select>

    <!-- 查询新客户数 -->
    <select id="selectNewCustomerCount" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM rental_customers
        WHERE is_deleted = 0 
        AND DATE(created_at) BETWEEN #{startDate} AND #{endDate}
    </select>

</mapper>
